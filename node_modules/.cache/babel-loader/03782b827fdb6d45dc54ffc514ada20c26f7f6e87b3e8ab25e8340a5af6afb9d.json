{"ast":null,"code":"var _jsxFileName = \"/Users/jee/Desktop/simpleDiary/src/OptimizeTest.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport Reat, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextView = _s(react.memo(_c = _s(_ref => {\n  _s();\n  let {\n    text\n  } = _ref;\n  useEffect(() => {\n    console.log(`update :: Text : ${text}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = TextView;\nconst CountView = _ref2 => {\n  _s2();\n  let {\n    count\n  } = _ref2;\n  useEffect(() => {\n    console.log(`update :: count : ${count}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n};\n_s2(CountView, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c3 = CountView;\nconst OptimizeTest = () => {\n  _s3();\n  const [count, setCount] = useState(1);\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CountView, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextView, {\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s3(OptimizeTest, \"dNtZfp4oyj4N/7iJZUhPAuJHtEE=\");\n_c4 = OptimizeTest;\nexport default OptimizeTest;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TextView$react.memo\");\n$RefreshReg$(_c2, \"TextView\");\n$RefreshReg$(_c3, \"CountView\");\n$RefreshReg$(_c4, \"OptimizeTest\");","map":{"version":3,"names":["Reat","useState","useEffect","TextView","react","memo","text","console","log","CountView","count","OptimizeTest","setCount","setText","padding","e","target","value"],"sources":["/Users/jee/Desktop/simpleDiary/src/OptimizeTest.js"],"sourcesContent":["import Reat, {useState, useEffect} from 'react';\n\nconst TextView = react.memo(({text}) => {\n    useEffect(()=>{\n        console.log(`update :: Text : ${text}`);\n    });\n    return <div>{text}</div>\n});\n\nconst CountView = ({count}) => {\n    useEffect(()=>{\n        console.log(`update :: count : ${count}`);\n    });\n    return <div>{count}</div>\n};\n\n\nconst OptimizeTest = () => {\n\n    const [count, setCount] = useState(1);\n    const [text, setText] = useState(\"\");\n\n    return (\n        <div style={{padding:50}}>\n            <div>\n                <h2>count</h2>\n                <CountView count={count}/>\n                <button onClick={()=>setCount(count+1)}>+</button>\n            </div>\n            <div>\n                <h2>text</h2>\n                <TextView text={text}/>\n                <input value={text} onChange={(e)=>setText(e.target.value)}/>\n            </div>\n        </div>\n    );\n};\n\nexport default OptimizeTest;"],"mappings":";;;;AAAA,OAAOA,IAAI,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC;AAEhD,MAAMC,QAAQ,MAAGC,KAAK,CAACC,IAAI,SAAC,QAAY;EAAA;EAAA,IAAX;IAACC;EAAI,CAAC;EAC/BJ,SAAS,CAAC,MAAI;IACVK,OAAO,CAACC,GAAG,CAAE,oBAAmBF,IAAK,EAAC,CAAC;EAC3C,CAAC,CAAC;EACF,oBAAO;IAAA,UAAMA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAO;AAC5B,CAAC,kCAAC;AAAC,MALGH,QAAQ;AAOd,MAAMM,SAAS,GAAG,SAAa;EAAA;EAAA,IAAZ;IAACC;EAAK,CAAC;EACtBR,SAAS,CAAC,MAAI;IACVK,OAAO,CAACC,GAAG,CAAE,qBAAoBE,KAAM,EAAC,CAAC;EAC7C,CAAC,CAAC;EACF,oBAAO;IAAA,UAAMA;EAAK;IAAA;IAAA;IAAA;EAAA,QAAO;AAC7B,CAAC;AAAC,IALID,SAAS;AAAA,MAATA,SAAS;AAQf,MAAME,YAAY,GAAG,MAAM;EAAA;EAEvB,MAAM,CAACD,KAAK,EAAEE,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACK,IAAI,EAAEO,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpC,oBACI;IAAK,KAAK,EAAE;MAACa,OAAO,EAAC;IAAE,CAAE;IAAA,wBACrB;MAAA,wBACI;QAAA,UAAI;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eACd,QAAC,SAAS;QAAC,KAAK,EAAEJ;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eAC1B;QAAQ,OAAO,EAAE,MAAIE,QAAQ,CAACF,KAAK,GAAC,CAAC,CAAE;QAAA,UAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAChD,eACN;MAAA,wBACI;QAAA,UAAI;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACb,QAAC,QAAQ;QAAC,IAAI,EAAEJ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE,eACvB;QAAO,KAAK,EAAEA,IAAK;QAAC,QAAQ,EAAGS,CAAC,IAAGF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3D;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,IAnBIN,YAAY;AAAA,MAAZA,YAAY;AAqBlB,eAAeA,YAAY;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}