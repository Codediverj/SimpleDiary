[{"/Users/jee/Desktop/j_project/simpleDiary/src/index.js":"1","/Users/jee/Desktop/j_project/simpleDiary/src/App.js":"2","/Users/jee/Desktop/j_project/simpleDiary/src/DiaryList.js":"3","/Users/jee/Desktop/j_project/simpleDiary/src/DiaryEditor.js":"4","/Users/jee/Desktop/j_project/simpleDiary/src/DiaryItem.js":"5"},{"size":223,"mtime":1675464280177,"results":"6","hashOfConfig":"7"},{"size":2482,"mtime":1675489252219,"results":"8","hashOfConfig":"7"},{"size":511,"mtime":1675401862052,"results":"9","hashOfConfig":"7"},{"size":1686,"mtime":1675482979316,"results":"10","hashOfConfig":"7"},{"size":2030,"mtime":1675483151391,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eo0njf",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jee/Desktop/j_project/simpleDiary/src/index.js",[],[],"/Users/jee/Desktop/j_project/simpleDiary/src/App.js",["29"],[],"import React, { useCallback, useEffect, useRef, useReducer, useMemo } from \"react\";\nimport './App.css';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n\nconst reducer = (state, action) => {\n  switch(action.type){\n    case \"INIT\": {\n      return action.data;\n    }\n    case \"CREATE\": {\n      const created_date = new Date().getTime();\n      const newItem = {\n        ...action.data,\n        created_date\n      }\n      return [newItem, ...state];\n    }\n    case \"REMOVE\": {\n      return state.filter((it)=>it.id !== action.targetId);\n    }\n    case \"EDIT\": {\n      return state.map((it)=>it.id === action.targetId ? \n      {...it, content:action.newContent} : it);\n    }\n    default: \n    return state;\n  }\n};\n\nexport const DiaryStateContext = React.createContext();\n\nfunction App() {\n\n  const [data, dispatch] = useReducer(reducer, []);\n  const dataId = useRef(0);\n  const getData = async()=> {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then((res)=>res.json());\n    \n    const initData = res.slice(0,20).map((it)=>{\n      return{\n        author : it.email,\n        content : it.body,\n        emotion : Math.floor(Math.random()*5)+1, \n        created_date : new Date().getTime(),\n        id : dataId.current++\n      }\n    });\n    dispatch({type:\"INIT\", data:initData})\n  };\n\n  useEffect(()=>{\n    getData();\n  },[]);\n\n  const onCreate = useCallback((author, content, emotion) => {\n    dispatch({type: \"CREATE\", data:{author, content, emotion, id : dataId.current}})\n    dataId.current += 1;\n  }, []);\n\n  const onDelete = useCallback((targetId) => {\n    dispatch({type: \"REMOVE\", targetId})\n  }, []);\n\n  const onEdit = useCallback((targetId, newContent) => {\n    dispatch({type: \"EDIT\", targetId, newContent})\n  }, []);\n\n  const getDiaryAnalysis = useMemo(() => {\n    const goodCount = data.filter((it)=>it.emotion >= 3 ).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = (goodCount / data.length) * 100;\n    return {goodCount, badCount, goodRatio};\n  }, [data.length]);\n\n  const {goodCount, badCount, goodRatio} = getDiaryAnalysis;\n\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate}/>\n      <div>Total : {data.length}</div>\n      <div>Good Mood day : {goodCount}</div>\n      <div>Bad Mood day : {badCount}</div>\n      <div>Good day (%) : {goodRatio}%</div>\n      <DiaryList onEdit={onEdit} onDelete={onDelete} diaryList={data}/>\n    </div>\n  );\n}\n\nexport default App;","/Users/jee/Desktop/j_project/simpleDiary/src/DiaryList.js",[],[],"/Users/jee/Desktop/j_project/simpleDiary/src/DiaryEditor.js",["30"],[],"import React, { useEffect, useRef, useState } from \"react\";  \n\n\nconst DiaryEditor = ({onCreate}) => {\n\n  const authorInput = useRef(); \n  const contentInput = useRef();  \n  \n  const [state, setState] = useState({\n    author: \"\",\n    content: \"\",\n    emotion: 1,\n  });\n\n  const handleChangeState = (e) => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = () => {     \n    if(state.author.length < 1) {\n      authorInput.current.focus();   \n      return;\n    }\n\n    if(state.content.length < 5){\n      contentInput.current.focus();\n      return;\n    }\n    onCreate(state.author, state.content, state.emotion);\n    setState({\n      author: \"\",\n      content: \"\",\n      emotion: 1,\n    });\n    alert(\"저장성공\");\n  }\n\n  return (\n    <div className=\"DiaryEditor\">\n      <h2>Today</h2>\n      <div>\n        <input \n        ref={authorInput}   \n        name=\"author\"\n        value={state.author} \n        onChange={handleChangeState}\n        />\n      </div>\n      <div>\n        <textarea \n        ref={contentInput}  \n        name=\"content\"\n        value={state.content} \n        onChange={handleChangeState}\n        />\n      </div>\n      <div>\n        <select\n          name=\"emotion\"\n          value={state.emotion} \n          onChange={handleChangeState}\n        >\n          <option value={1}>1</option>\n          <option value={2}>2</option>\n          <option value={3}>3</option>\n          <option value={4}>4</option>\n          <option value={5}>5</option>\n        </select>\n      </div>\n      <div>\n        <button onClick={handleSubmit}>Save</button>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DiaryEditor);","/Users/jee/Desktop/j_project/simpleDiary/src/DiaryItem.js",[],[],{"ruleId":"31","severity":1,"message":"32","line":74,"column":6,"nodeType":"33","endLine":74,"endColumn":19,"suggestions":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":26},"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["39"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",{"desc":"40","fix":"41"},"Update the dependencies array to be: [data]",{"range":"42","text":"43"},[2043,2056],"[data]"]