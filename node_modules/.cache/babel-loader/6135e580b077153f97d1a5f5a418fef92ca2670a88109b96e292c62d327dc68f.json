{"ast":null,"code":"var _jsxFileName = \"/Users/jee/Desktop/simpleDiary/src/DiaryItem.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DiaryItem = _ref => {\n  _s();\n  let {\n    onEdit,\n    onDelete,\n    id,\n    author,\n    content,\n    emotion,\n    created_date\n  } = _ref;\n  //false 일때는 일반모드\n  //true 일때는 수정모드\n  const [isEdit, setIsEdit] = useState(false);\n  const toggleIsEdit = () => setIsEdit(!isEdit);\n  const [localContent, setLocalContent] = useState(\"\");\n  const handleRemove = () => {\n    if (window.confirm(`${id}번째 일기를 정말 삭제하시겠습니까?`)) {\n      onDelete(id);\n    }\n  };\n\n  //수정을 눌렀을 때 기존 content가 텍스트 박스에 남아있도록.\n  const handleQuitEdit = () => {\n    setIsEdit(false);\n    setLocalContent(content);\n  };\n  const handleEdit = () => {\n    if (localContent.length < 5) {\n      return;\n    }\n    onEdit(id, localContent);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"author_info\",\n        children: [\"author: \", author, \" / emotion : \", emotion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: new Date(created_date).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: isEdit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: localContent,\n          onChange: e => setLocalContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: content\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), isEdit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleQuitEdit,\n        children: \"Cancel Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRemove,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleIsEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n_s(DiaryItem, \"YIt8C8uXXjD+3gNqyUI7/HqQs4A=\");\n_c = DiaryItem;\nexport default DiaryItem;\nvar _c;\n$RefreshReg$(_c, \"DiaryItem\");","map":{"version":3,"names":["useState","DiaryItem","onEdit","onDelete","id","author","content","emotion","created_date","isEdit","setIsEdit","toggleIsEdit","localContent","setLocalContent","handleRemove","window","confirm","handleQuitEdit","handleEdit","length","Date","toLocaleString","e","target","value"],"sources":["/Users/jee/Desktop/simpleDiary/src/DiaryItem.js"],"sourcesContent":["import {useState} from \"react\";\n\nconst DiaryItem = ({\n    onEdit,\n    onDelete,\n    id,\n    author, \n    content, \n    emotion, \n    created_date, \n}) => {\n\n    //false 일때는 일반모드\n    //true 일때는 수정모드\n    const [isEdit, setIsEdit] = useState(false);\n    const toggleIsEdit = () => setIsEdit(!isEdit);\n\n    const [localContent, setLocalContent] = useState(\"\");\n\n    const handleRemove = () => {\n        if(window.confirm(`${id}번째 일기를 정말 삭제하시겠습니까?`)){\n            onDelete(id);\n        }\n    };\n\n    //수정을 눌렀을 때 기존 content가 텍스트 박스에 남아있도록.\n    const handleQuitEdit = () => {\n        setIsEdit(false);\n        setLocalContent(content);\n    }\n\n    const handleEdit = () => {\n        if(localContent.length < 5){\n            return;\n        }\n        onEdit(id, localContent);\n    }\n\n    return (\n      <div className=\"DiaryItem\">\n        <div className=\"info\">\n            <span className=\"author_info\">\n                author: {author} / emotion : {emotion}\n            </span>\n            <span className=\"date\">{new Date(created_date).toLocaleString()}</span>\n        </div>\n        <div className=\"content\">\n            {isEdit ? (\n                <>\n                    <textarea \n                    value={localContent}\n                    onChange={(e)=>setLocalContent(e.target.value)}/>\n                </>\n            ) : (\n                <>{content}</>\n            )}\n        </div>\n        {isEdit ? (\n        <>\n            <button onClick={handleQuitEdit}>Cancel Edit</button>\n            <button onClick={handleEdit}>Save</button>\n        </>\n        ) : (\n        <>\n            <button onClick={handleRemove}>Delete</button>\n            <button onClick={toggleIsEdit}>Edit</button>\n        </>\n        )}\n      </div>\n    );\n  };\n  export default DiaryItem;"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC;AAAA;AAE/B,MAAMC,SAAS,GAAG,QAQZ;EAAA;EAAA,IARa;IACfC,MAAM;IACNC,QAAQ;IACRC,EAAE;IACFC,MAAM;IACNC,OAAO;IACPC,OAAO;IACPC;EACJ,CAAC;EAEG;EACA;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMW,YAAY,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAM,CAAC;EAE7C,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMc,YAAY,GAAG,MAAM;IACvB,IAAGC,MAAM,CAACC,OAAO,CAAE,GAAEZ,EAAG,qBAAoB,CAAC,EAAC;MAC1CD,QAAQ,CAACC,EAAE,CAAC;IAChB;EACJ,CAAC;;EAED;EACA,MAAMa,cAAc,GAAG,MAAM;IACzBP,SAAS,CAAC,KAAK,CAAC;IAChBG,eAAe,CAACP,OAAO,CAAC;EAC5B,CAAC;EAED,MAAMY,UAAU,GAAG,MAAM;IACrB,IAAGN,YAAY,CAACO,MAAM,GAAG,CAAC,EAAC;MACvB;IACJ;IACAjB,MAAM,CAACE,EAAE,EAAEQ,YAAY,CAAC;EAC5B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAK,SAAS,EAAC,MAAM;MAAA,wBACjB;QAAM,SAAS,EAAC,aAAa;QAAA,WAAC,UAClB,EAACP,MAAM,EAAC,eAAa,EAACE,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAClC,eACP;QAAM,SAAS,EAAC,MAAM;QAAA,UAAE,IAAIa,IAAI,CAACZ,YAAY,CAAC,CAACa,cAAc;MAAE;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACrE,eACN;MAAK,SAAS,EAAC,SAAS;MAAA,UACnBZ,MAAM,gBACH;QAAA,uBACI;UACA,KAAK,EAAEG,YAAa;UACpB,QAAQ,EAAGU,CAAC,IAAGT,eAAe,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA;MAAE,iBAClD,gBAEH;QAAA,UAAGlB;MAAO;IACb;MAAA;MAAA;MAAA;IAAA,QACC,EACLG,MAAM,gBACP;MAAA,wBACI;QAAQ,OAAO,EAAEQ,cAAe;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS,eACrD;QAAQ,OAAO,EAAEC,UAAW;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA,gBAC3C,gBAEH;MAAA,wBACI;QAAQ,OAAO,EAAEJ,YAAa;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS,eAC9C;QAAQ,OAAO,EAAEH,YAAa;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA,gBAE/C;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GApEEV,SAAS;AAAA,KAATA,SAAS;AAqEb,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}